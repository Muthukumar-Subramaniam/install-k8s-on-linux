# roles/firewalld_setup/tasks/apply_rules.yaml

# Create 'k8s-control-plane' zone for control plane nodes
- name: Create k8s-control-plane zone
  ansible.posix.firewalld:
    name: k8s-control-plane
    state: present
  when: "'k8s-ctrl-plane' in group_names"
  become: true

# Create 'k8s-worker' zone for worker nodes
- name: Create k8s-worker zone
  ansible.posix.firewalld:
    name: k8s-worker
    state: present
  when: "'k8s-worker' in group_names"
  become: true

# Create 'calico' zone
- name: Create calico zone
  ansible.posix.firewalld:
    name: calico
    state: present
  become: true

# Open Control Plane Ports and NodePort Range in 'k8s-control-plane' zone
- name: Open control plane ports and NodePort range (30000-32767)
  ansible.posix.firewalld:
    zone: k8s-control-plane
    port: "{{ item }}"
    permanent: yes
    state: enabled
  loop:
    - 6443/tcp   # Kubernetes API server
    - 2379-2380/tcp  # etcd
    - 10250/tcp  # Kubelet API server
    - 10256/tcp  # kube-proxy
    - 10257/tcp  # kube-controller-manager
    - 10259/tcp  # Kube-scheduler
    - 30000-32767/tcp  # NodePort range
  when: "'k8s-ctrl-plane' in group_names"
  become: true

# Open Worker Node Ports and NodePort Range in 'k8s-worker' zone
- name: Open worker node ports and NodePort range (30000-32767)
  ansible.posix.firewalld:
    zone: k8s-worker
    port: "{{ item }}"
    permanent: yes
    state: enabled
  loop:
    - 10250/tcp  # Kubelet API server
    - 10256/tcp  # Kube Proxy
    - 30000-32767/tcp  # NodePort range
  when: "'k8s-worker' in group_names"
  become: true

# Open Calico Specific Ports in 'calico' zone
- name: Open Calico ports in 'calico' zone
  ansible.posix.firewalld:
    zone: calico
    port: "{{ item }}"
    permanent: yes
    state: enabled
  loop:
    - 179/tcp      # BGP port
    - 4789/udp     # VXLAN port
    - 5473/tcp     # Calico port for various services
    - 51820/udp    # WireGuard port for Calico
    - 51821/udp    # Another WireGuard port for Calico
  become: true

# Allow IP-in-IP encapsulation for Calico (Protocol 4) in 'calico' zone
- name: Allow IP-in-IP encapsulation for Calico (Protocol 4) in 'calico' zone
  ansible.posix.firewalld:
    zone: calico
    protocol: 4
    permanent: yes
    state: enabled
  become: true

# Reload firewalld if it is running
- name: Reload firewalld if it is running
  ansible.posix.firewalld:
    state: reloaded
  become: true