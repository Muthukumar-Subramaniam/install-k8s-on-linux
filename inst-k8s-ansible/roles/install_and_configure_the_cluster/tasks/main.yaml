##Version : v2.1.2
- set_fact:
    var_k8s_user: "{{ ansible_user }}"

- name: Wait until k8s core images required for cluster creation are pulled
  command: sudo kubeadm config images pull

- name: Create k8s cluster using kubeadm init
  command: sudo kubeadm init --pod-network-cidr={{ var_k8s_pod_network_cidr }}

- name: Grant access to user {{ var_k8s_user }} to manage the k8s cluster
  shell: |
    mkdir -p /home/{{ var_k8s_user }}/.kube
    sudo cp -p /etc/kubernetes/admin.conf /home/{{ var_k8s_user }}/.kube/config
    sudo chown $(id -u {{ var_k8s_user }}):$(id -g {{ var_k8s_user }}) /home/{{ var_k8s_user }}/.kube/config

- name: Wait for Kubernetes API server to be healthy
  shell: curl -skL https://localhost:6443/healthz
  register: var_api_server_health_status
  until: var_api_server_health_status.stdout.find("ok") != -1
  retries: 100
  delay: 5

- name: Applying latest calico CNI  ( {{ var_calico_latest_version }} ) manifest from GitHub 
  shell: kubectl apply -f https://raw.githubusercontent.com/projectcalico/calico/{{ var_calico_latest_version }}/manifests/calico.yaml

- name: Wait for control-plane to get Ready
  shell: kubectl get nodes | grep -w " Ready "
  register: var_control_plane_ready_status
  retries: 100
  until: var_control_plane_ready_status.stdout.find("Ready") != -1
  delay: 5

- name: K8s cluster control-plane node is Ready
  shell: kubectl get nodes
  register: var_nodes_status

- debug:
    msg: |-
      {{ var_nodes_status.stdout_lines }}

- name: Print join command and store the value to join the worker nodes
  command: sudo kubeadm token create --print-join-command
  register: var_kubeadm_join_command

- debug:
    msg: |-
      {{ var_kubeadm_join_command.stdout_lines }}

- name: Copy join command as {{ var_k8s_join_command_temp_script }} to local-ansible-control-host 
  local_action: shell echo "{{ var_kubeadm_join_command.stdout_lines[0] }}" > {{ var_k8s_join_command_temp_script }}

########################### EOF ##########################################
