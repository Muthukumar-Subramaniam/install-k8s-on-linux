- name: Add k8s gpg apt-key ( Debian based systems )
  become: true
  apt_key:
    keyring: /etc/apt/keyrings/k8s-apt-keyring-{{ k8s_version_major_minor }}.gpg
    url: https://pkgs.k8s.io/core:/stable:/{{ k8s_version_major_minor }}/deb/Release.key
    state: present

- name: Add k8s deb repository ( Debian based systems )
  become: true
  apt_repository:
    filename: k8s-{{ k8s_version_major_minor }}
    repo: deb [signed-by=/etc/apt/keyrings/k8s-apt-keyring-{{ k8s_version_major_minor }}.gpg] https://pkgs.k8s.io/core:/stable:/{{ k8s_version_major_minor }}/deb/ /
    state: present
    update-cache: true

- name: Get list of kubernetes versions with apt-cache ( Debian based systems )
  become: true
  command: apt-cache madison kubectl
  register: kubectl_versions
  changed_when: false

- name: Extract exact version string of kubernetes versions ( Debian based systems )
  set_fact:
    k8s_package_version: "{{ item.split('|')[1] | trim }}"
  loop: "{{ kubectl_versions.stdout_lines }}"
  when: item.split('|')[1] | trim is match('^' + (k8s_latest_version | regex_replace('^v', '')) + '-')
  loop_control:
    label: "{{ item }}"

- name: Install kubelet, kubeadm and kubectl packages ( Debian based systems )
  become: true
  apt:
    name:
      - "kubelet={{ k8s_package_version }}"
      - "kubeadm={{ k8s_package_version }}"
      - "kubectl={{ k8s_package_version }}"
      - bash-completion 
    state: present

- name: Lock kubelet, kubeadm and kubectl packages from upgrades ( Debian based systems )
  become: true
  dpkg_selections:
    name: "{{ item }}"
    selection: "hold"
  loop:
    - kubelet
    - kubeadm
    - kubectl

######################################### EOF ############################################# 
